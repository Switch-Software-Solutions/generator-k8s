# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: <%= data['ingress-name'] %>-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /<% if(data['ingress-use-ssl']) { %>
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'<% } %><% if(data['ingress-backend']) { %>
    nginx.ingress.kubernetes.io/proxy-body-size: '0'<% } %><% if(data['ingress-frontend']) { %>
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(manifest|appcache|html?|xml|json)) {
        add_header Cache-Control no-cache;
        expires 0;
      }

      if ($request_uri ~* \.(jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)) {
        expires 1M;
        add_header Cache-Control "public";
      }

      if ($request_uri ~* \.(css|js)) {
        expires 1y;
        add_header Cache-Control "public";
      }<% } %>

spec:<% if(data['ingress-use-ssl']) { %>
  tls:
    - secretName: <%= data['ingress-tls-name'] %>
      hosts:<% for(const url of data['ingress-urls']) { %>
        - <%= url -%><% } %><% } %>
  rules:<% for(const url of data['ingress-urls']) { %>
    - host: <%= url %>
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: <%= data['ingress-service-name'] %>
              port:
                number: 80<% } %>
